[{"path":"https://sckott.github.io/func/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://sckott.github.io/func/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 func authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sckott.github.io/func/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Maintainer.","code":""},{"path":"https://sckott.github.io/func/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S (2024). func: Tools Function Development. R package version 0.0.2.93, https://sckott.github.io/func/.","code":"@Manual{,   title = {func: Tools for Function Development},   author = {Scott Chamberlain},   year = {2024},   note = {R package version 0.0.2.93},   url = {https://sckott.github.io/func/}, }"},{"path":"https://sckott.github.io/func/index.html","id":"func","dir":"","previous_headings":"","what":"Tools for Function Development","title":"Tools for Function Development","text":"func - tools function development","code":""},{"path":"https://sckott.github.io/func/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Function Development","text":"","code":"# install.packages(\"pak\") pak::pak(\"sckott/func\") library('func')"},{"path":"https://sckott.github.io/func/index.html","id":"usage","dir":"","previous_headings":"","what":"usage","title":"Tools for Function Development","text":"func_load(): load default parameter values function vector/list functions func_load_path(): func_load(), functions file","code":"mars <- function() 5 venus <- function(z = mars(), m = list(goo = \"bar\"), v = function(e) e) {   list(z, z, v) } mars() #> [1] 5 venus() #> [[1]] #> [1] 5 #>  #> [[2]] #> [1] 5 #>  #> [[3]] #> function (e)  #> e #> <environment: 0x12d80ddb8> z #> Error: object 'z' not found m #> Error: object 'm' not found v #> Error: object 'v' not found func_load(venus) class(z); z #> [1] \"numeric\" #> [1] 5 class(m); m #> [1] \"list\" #> $goo #> [1] \"bar\" class(v); v #> [1] \"function\" #> function (e)  #> e #> <environment: 0x12d95ce78> tmpf <- tempfile(fileext=\".R\") cat(\"myfunc <- function() 2\\nfun <- function(bar = 5, zzz = myfunc()) bar + 1\\n\", file=tmpf) func_load_path(path=tmpf) bar #> [1] 5 zzz #> [1] 2"},{"path":"https://sckott.github.io/func/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Tools for Function Development","text":"Please report issues bugs. License: MIT Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://sckott.github.io/func/reference/func-package.html","id":null,"dir":"Reference","previous_headings":"","what":"func: Tools for Function Development — func-package","title":"func: Tools for Function Development — func-package","text":"Tools function development.","code":""},{"path":[]},{"path":"https://sckott.github.io/func/reference/func_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load default parameter values — func_load","title":"Load default parameter values — func_load","text":"function list functions","code":""},{"path":"https://sckott.github.io/func/reference/func_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load default parameter values — func_load","text":"","code":"func_load(fun, envir = globalenv(), eval = TRUE)"},{"path":"https://sckott.github.io/func/reference/func_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load default parameter values — func_load","text":"fun (function) Function object, character name function. required envir Environment load default parameters . Default: `globalenv()`. required eval (logical) evaluate `call`s?. default: `TRUE`. `TRUE`, parameter values class `call` run `rlang::eval_tidy()`. example: lists, anonymous functions, function calls . required","code":""},{"path":"https://sckott.github.io/func/reference/func_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load default parameter values — func_load","text":"","code":"# one function foo <- function(w=5, y=4) w+y func_load(foo) w; y #> [1] 5 #> [1] 4  # many functions foo <- function(w=5, y=4) w+y bar <- function(a=\"a\", b=\"b\") c(a,b) func_load(c(foo, bar)) w; y; a; b #> [1] 5 #> [1] 4 #> [1] \"a\" #> [1] \"b\"  # function with a function as a default parameter mars <- function() 5 venus <- function(z = mars(), m = list(goo = \"bar\"), v = function(e) e) {   list(z, z, v) } mars() #> [1] 5 venus() #> [[1]] #> [1] 5 #>  #> [[2]] #> [1] 5 #>  #> [[3]] #> function (e)  #> e #> <environment: 0x560fe6d95b78> #>  # z # m # v if (FALSE) { # \\dontrun{ func_load(venus) class(z); z class(m); m class(v); v  ## eval=FALSE func_load(venus, eval=FALSE) class(z); z class(m); m class(v); v } # }"},{"path":"https://sckott.github.io/func/reference/func_load_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Load default parameter values — func_load_path","title":"Load default parameter values — func_load_path","text":"function(s) file","code":""},{"path":"https://sckott.github.io/func/reference/func_load_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load default parameter values — func_load_path","text":"","code":"func_load_path(path, envir = globalenv(), eval = TRUE)"},{"path":"https://sckott.github.io/func/reference/func_load_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load default parameter values — func_load_path","text":"path Path file one functions. required envir Environment load default parameters . Default: `globalenv()`. required eval (logical) evaluate `call`s?. default: `TRUE`. `TRUE`, parameter values class `call` run `rlang::eval_tidy()`. example: lists, anonymous functions, function calls . required","code":""},{"path":"https://sckott.github.io/func/reference/func_load_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load default parameter values — func_load_path","text":"","code":"tmpf <- tempfile(fileext=\".R\") cat(\"fun <- function(bar = 5, foo = function() x, ...) bar + 1\\n\", file=tmpf) func_load_path(path=tmpf) bar #> [1] 5 foo #> function ()  #> x #> <environment: 0x560fe92ab360>"}]
